# Generated by Django 5.0.14 on 2025-10-24 11:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator("^\\+?1?\\d{9,15}$")
                        ],
                    ),
                ),
                (
                    "current_level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        default="A1",
                        max_length=2,
                    ),
                ),
                (
                    "target_level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        default="B2",
                        max_length=2,
                    ),
                ),
                (
                    "specialization",
                    models.CharField(
                        choices=[
                            ("backend", "Backend Development"),
                            ("frontend", "Frontend Development"),
                            ("devops", "DevOps"),
                            ("mobile", "Mobile Development"),
                            ("data", "Data Science"),
                            ("security", "Cybersecurity"),
                            ("qa", "QA/Testing"),
                            ("pm", "Project Management"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "daily_goal_minutes",
                    models.IntegerField(
                        default=30,
                        validators=[django.core.validators.MinValueValidator(5)],
                    ),
                ),
                (
                    "xp_points",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "coins",
                    models.IntegerField(
                        default=100,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "streak_days",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "longest_streak",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("last_activity_date", models.DateField(blank=True, null=True)),
                ("is_corporate", models.BooleanField(default=False)),
                ("department", models.CharField(blank=True, max_length=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("preferred_study_time", models.TimeField(blank=True, null=True)),
                ("enable_notifications", models.BooleanField(default=True)),
                ("enable_sound_effects", models.BooleanField(default=True)),
                ("interface_language", models.CharField(default="en", max_length=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("premium_until", models.DateTimeField(blank=True, null=True)),
                (
                    "referral_code",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
            ],
            options={
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_id", models.CharField(max_length=255, unique=True)),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Web"),
                        ],
                        max_length=10,
                    ),
                ),
                ("push_token", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_used", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "user_devices",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                ("linkedin_url", models.URLField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                (
                    "learning_style",
                    models.CharField(
                        choices=[
                            ("visual", "Visual"),
                            ("auditory", "Auditory"),
                            ("reading", "Reading/Writing"),
                            ("kinesthetic", "Kinesthetic"),
                        ],
                        default="visual",
                        max_length=20,
                    ),
                ),
                ("total_study_time_minutes", models.IntegerField(default=0)),
                ("words_learned", models.IntegerField(default=0)),
                ("lessons_completed", models.IntegerField(default=0)),
                ("perfect_lessons", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "user_profiles",
            },
        ),
    ]
