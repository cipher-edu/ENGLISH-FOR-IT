# Generated by Django 5.0.14 on 2025-10-24 11:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=220, unique=True)),
                ("industry", models.CharField(max_length=100)),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("startup", "1-10 employees"),
                            ("small", "11-50 employees"),
                            ("medium", "51-200 employees"),
                            ("large", "201-1000 employees"),
                            ("enterprise", "1000+ employees"),
                        ],
                        max_length=20,
                    ),
                ),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="companies/logos/"
                    ),
                ),
                ("primary_color", models.CharField(default="#2196F3", max_length=7)),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("trial", "Trial"),
                            ("basic", "Basic"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="trial",
                        max_length=20,
                    ),
                ),
                (
                    "subscription_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("max_users", models.IntegerField(default=10)),
                ("subscription_ends", models.DateTimeField(blank=True, null=True)),
                ("enforce_daily_practice", models.BooleanField(default=False)),
                ("minimum_daily_minutes", models.IntegerField(default=15)),
                (
                    "allowed_domains",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Email domains for auto-approval",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Companies",
                "db_table": "companies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CompanyAdmin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("instructor", "Instructor"),
                        ],
                        default="admin",
                        max_length=20,
                    ),
                ),
                ("can_manage_users", models.BooleanField(default=True)),
                ("can_view_analytics", models.BooleanField(default=True)),
                ("can_create_content", models.BooleanField(default=False)),
                ("can_manage_billing", models.BooleanField(default=False)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_additions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corporate.company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "company_admins",
            },
        ),
        migrations.AddField(
            model_name="company",
            name="admins",
            field=models.ManyToManyField(
                related_name="administered_companies",
                through="corporate.CompanyAdmin",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CompanyAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("active_users", models.IntegerField(default=0)),
                ("total_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("total_xp_earned", models.IntegerField(default=0)),
                ("lessons_completed", models.IntegerField(default=0)),
                ("average_study_time_minutes", models.FloatField(default=0)),
                ("average_streak_days", models.FloatField(default=0)),
                ("completion_rate", models.FloatField(default=0)),
                ("vocabulary_words_learned", models.IntegerField(default=0)),
                ("assessments_taken", models.IntegerField(default=0)),
                ("average_assessment_score", models.FloatField(default=0)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corporate.company",
                    ),
                ),
                (
                    "most_popular_course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "db_table": "company_analytics",
                "ordering": ["company", "-date"],
            },
        ),
        migrations.CreateModel(
            name="CompanyInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                ("billing_period_start", models.DateField()),
                ("billing_period_end", models.DateField()),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("payment_method", models.CharField(blank=True, max_length=50)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="invoices/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("due_date", models.DateField()),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corporate.company",
                    ),
                ),
            ],
            options={
                "db_table": "company_invoices",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("target_roles", models.JSONField(default=list)),
                ("target_level", models.CharField(max_length=2)),
                ("is_mandatory", models.BooleanField(default=False)),
                ("deadline_weeks", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corporate.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "learning_paths",
                "ordering": ["company", "title"],
            },
        ),
        migrations.CreateModel(
            name="LearningPathItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField()),
                ("is_required", models.BooleanField(default=True)),
                ("expected_completion_days", models.IntegerField(null=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "learning_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corporate.learningpath",
                    ),
                ),
            ],
            options={
                "db_table": "learning_path_items",
                "ordering": ["learning_path", "order"],
            },
        ),
        migrations.AddField(
            model_name="learningpath",
            name="courses",
            field=models.ManyToManyField(
                through="corporate.LearningPathItem", to="courses.course"
            ),
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("weekly_xp_goal", models.IntegerField(default=500)),
                ("weekly_lesson_goal", models.IntegerField(default=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="corporate.company",
                    ),
                ),
                (
                    "team_lead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="led_teams",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "teams",
                "ordering": ["company", "name"],
            },
        ),
        migrations.CreateModel(
            name="TeamMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("member", "Member"),
                            ("lead", "Team Lead"),
                            ("mentor", "Mentor"),
                        ],
                        default="member",
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="corporate.team"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "team_memberships",
            },
        ),
        migrations.AddField(
            model_name="team",
            name="members",
            field=models.ManyToManyField(
                through="corporate.TeamMembership", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddIndex(
            model_name="companyadmin",
            index=models.Index(
                fields=["company", "role"], name="company_adm_company_2b5849_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="companyadmin",
            unique_together={("company", "user")},
        ),
        migrations.AddIndex(
            model_name="companyanalytics",
            index=models.Index(
                fields=["company", "-date"], name="company_ana_company_d941d4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="companyanalytics",
            unique_together={("company", "date")},
        ),
        migrations.AddIndex(
            model_name="companyinvoice",
            index=models.Index(
                fields=["company", "-created_at"], name="company_inv_company_80105b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="companyinvoice",
            index=models.Index(fields=["status"], name="company_inv_status_706283_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="learningpathitem",
            unique_together={("learning_path", "course")},
        ),
        migrations.AddIndex(
            model_name="teammembership",
            index=models.Index(
                fields=["team", "is_active"], name="team_member_team_id_c19fd0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teammembership",
            index=models.Index(
                fields=["user", "is_active"], name="team_member_user_id_f01edb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="teammembership",
            unique_together={("team", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="team",
            unique_together={("company", "name")},
        ),
    ]
